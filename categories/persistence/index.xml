<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Persistence on theevilbit blog</title>
    <link>https://theevilbit.github.io/categories/persistence/</link>
    <description>Recent content in Persistence on theevilbit blog</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Tue, 15 Oct 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://theevilbit.github.io/categories/persistence/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Beyond the good ol&#39; LaunchAgents - 35 - Persist through the NVRAM - The &#39;apple-trusted-trampoline&#39;</title>
      <link>https://theevilbit.github.io/beyond/beyond_0035/</link>
      <pubDate>Tue, 15 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://theevilbit.github.io/beyond/beyond_0035/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;This is part 35 in the series of &amp;ldquo;Beyond the good ol&amp;rsquo; LaunchAgents&amp;rdquo;, where I try to collect various persistence techniques for macOS. For more background check the &lt;a href=&#34;https://theevilbit.github.io/beyond/beyond_intro/&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;introduction&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;TL;DR - This is a practically completely useless persistence, as this can be only set and enabled when SIP is actually disabled. On the other hand I still find it a pretty amazing way to persist, as we can do that by putting a binary into NVRAM and get that executed. Here follows the details of the discovery.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Beyond the good ol&#39; LaunchAgents - 34 - launchd boot tasks</title>
      <link>https://theevilbit.github.io/beyond/beyond_0034/</link>
      <pubDate>Thu, 10 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://theevilbit.github.io/beyond/beyond_0034/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;This is part 34 in the series of &amp;ldquo;Beyond the good ol&amp;rsquo; LaunchAgents&amp;rdquo;, where I try to collect various persistence techniques for macOS. For more background check the &lt;a href=&#34;https://theevilbit.github.io/beyond/beyond_intro/&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;introduction&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;The all mighty &lt;code&gt;launchd&lt;/code&gt;, contains an embedded plist file in its &lt;code&gt;__TEXT __config&lt;/code&gt; section, which contains various settings, BootStrap file locations (like &lt;code&gt;LaunchDaemons&lt;/code&gt; and &lt;code&gt;LaunchAgents&lt;/code&gt;) and it has also a &lt;code&gt;Boot&lt;/code&gt; key, which defines various services, which will be run upon boot. They are called boot tasks. Although this is documented in Jonathan Levin&amp;rsquo;s *OS Internals Vol I. book, I think this is a not well known, and in fact I also totally forgot about it until &lt;a href=&#34;https://x.com/byaaaaahhh&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Matt&lt;/a&gt; brought them to my attention recently.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Beyond the good ol&#39; LaunchAgents - 33 - Widgets</title>
      <link>https://theevilbit.github.io/beyond/beyond_0033/</link>
      <pubDate>Wed, 12 Jun 2024 00:00:00 +0000</pubDate>
      <guid>https://theevilbit.github.io/beyond/beyond_0033/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;This is part 33 in the series of &amp;ldquo;Beyond the good ol&amp;rsquo; LaunchAgents&amp;rdquo;, where I try to collect various persistence techniques for macOS. For more background check the &lt;a href=&#34;https://theevilbit.github.io/beyond/beyond_intro/&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;introduction&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;Widgets are application extensions you can place on your desktop to display some key information from your main app. Although Apple says developers shouldn&amp;rsquo;t implement any functionality there and just use them as a display, they are still apps that run on their own and we can run code inside them. We will explore how we can create them, use them as persistence and also investigate what widgets will automatically run on our system.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Beyond the good ol&#39; LaunchAgents - 32 - Dock Tile Plugins</title>
      <link>https://theevilbit.github.io/beyond/beyond_0032/</link>
      <pubDate>Fri, 29 Sep 2023 00:00:00 +0000</pubDate>
      <guid>https://theevilbit.github.io/beyond/beyond_0032/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;This is part 32 in the series of &amp;ldquo;Beyond the good ol&amp;rsquo; LaunchAgents&amp;rdquo;, where I try to collect various persistence techniques for macOS. For more background check the &lt;a href=&#34;https://theevilbit.github.io/beyond/beyond_intro/&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;introduction&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;When you write a series about something, there are some episodes which are less interesting, many boring stuff, but sometimes there are some true gems. While doing some research yesterday, I run into the Dock Tile Plugin feature in macOS, which turned out to be truly amazing from persistence point of view.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Beyond the good ol&#39; LaunchAgents - 31 - BSM audit framework</title>
      <link>https://theevilbit.github.io/beyond/beyond_0031/</link>
      <pubDate>Fri, 26 May 2023 00:00:00 +0000</pubDate>
      <guid>https://theevilbit.github.io/beyond/beyond_0031/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;This is part 31 in the series of &amp;ldquo;Beyond the good ol&amp;rsquo; LaunchAgents&amp;rdquo;, where I try to collect various persistence techniques for macOS. For more background check the &lt;a href=&#34;https://theevilbit.github.io/beyond/beyond_intro/&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;introduction&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;macOS implements the OpenBSM audit framework created by McAfee, which allows someone to audit system events, like login, file access, etc… This has been part of the system for very long time. Auditing has several components, the main one being the kernel, which handles all the events. The main user mode process is &lt;code&gt;auditd&lt;/code&gt;, which is mainly responsible for logging. It’s a huge framework, detailed very well by Jonathan Levin in his &lt;code&gt;*OS Internal Part 3&lt;/code&gt; book. I suggest reading that part, but you can also find some information here:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Beyond the good ol&#39; LaunchAgents - 30 - The man config file - man.conf</title>
      <link>https://theevilbit.github.io/beyond/beyond_0030/</link>
      <pubDate>Wed, 10 May 2023 00:00:00 +0000</pubDate>
      <guid>https://theevilbit.github.io/beyond/beyond_0030/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;This is part 30 in the series of &amp;ldquo;Beyond the good ol&amp;rsquo; LaunchAgents&amp;rdquo;, where I try to collect various persistence techniques for macOS. For more background check the &lt;a href=&#34;https://theevilbit.github.io/beyond/beyond_intro/&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;introduction&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;I was watching an old BSidesLuxemburg 2019 talk by Aaron Jewitt, called &amp;ldquo;Threat Hunting On Linux And Mac With Auditbeat System Module&amp;rdquo;, it&amp;rsquo;s up on &lt;a href=&#34;https://www.youtube.com/watch?v=teq6r7XbBug&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;YouTube&lt;/a&gt;. Aaron mentioned in one of the slides that you can persist using &lt;code&gt;man.conf&lt;/code&gt; files. It looked really odd, I tried to quickly Google it, but haven’t found anything about it. So I took a look at the configuration file, and indeed, it turns out you can persist via man’s configuration file, &lt;code&gt;man.conf&lt;/code&gt;, which can be found at &lt;code&gt;/private/etc/man.conf&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Beyond the good ol&#39; LaunchAgents - 29 - amstoold</title>
      <link>https://theevilbit.github.io/beyond/beyond_0029/</link>
      <pubDate>Tue, 08 Mar 2022 00:00:00 +0000</pubDate>
      <guid>https://theevilbit.github.io/beyond/beyond_0029/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;This is part 29 in the series of &amp;ldquo;Beyond the good ol&amp;rsquo; LaunchAgents&amp;rdquo;, where I try to collect various persistence techniques for macOS. For more background check the &lt;a href=&#34;https://theevilbit.github.io/beyond/beyond_intro/&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;introduction&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;When doing some research on macOS I came across the following LaunchAgent: &lt;code&gt;/System/Library/LaunchAgents/com.apple.amstoold.plist&lt;/code&gt;. Its content is the following.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!DOCTYPE plist PUBLIC &amp;#34;-//Apple//DTD PLIST 1.0//EN&amp;#34; &amp;#34;http://www.apple.com/DTDs/PropertyList-1.0.dtd&amp;#34;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;plist&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;version=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1.0&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dict&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;EnablePressuredExit&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;true/&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;EnableTransactions&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;true/&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;Label&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;com.apple.amstoold&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;LaunchEvents&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dict&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;com.apple.distnoted.matching&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dict&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;com.apple.nfcd.ams.accessory&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dict&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;Name&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;com.apple.nfcd.ams.accessory&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dict&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dict&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;com.apple.notifyd.matching&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dict&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;com.apple.ams.privateListeningChanged&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dict&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;Notification&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;com.apple.ams.privateListeningChanged&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dict&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dict&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dict&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;MachServices&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dict&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;com.apple.xpc.amstoold&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;true/&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dict&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;ProcessType&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;Background&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;ProgramArguments&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;array&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;/usr/local/bin/amstoold&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/array&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;RunAtLoad&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;true/&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dict&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/plist&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If we examine it closely we can notice that the related binary is &lt;code&gt;/usr/local/bin/amstoold&lt;/code&gt;. This is very interesting as this file doesn&amp;rsquo;t exists on default macOS installations. This means that if we create it, it will be started as the user upon login. As the launchd file is SIP protected, we can&amp;rsquo;t even remove it, and even if we would, it likely would come back at the next OS update.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Beyond the good ol&#39; LaunchAgents - 28 - Authorization Plugins</title>
      <link>https://theevilbit.github.io/beyond/beyond_0028/</link>
      <pubDate>Wed, 09 Feb 2022 00:00:00 +0000</pubDate>
      <guid>https://theevilbit.github.io/beyond/beyond_0028/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;This is part 28 in the series of &amp;ldquo;Beyond the good ol&amp;rsquo; LaunchAgents&amp;rdquo;, where I try to collect various persistence techniques for macOS. For more background check the &lt;a href=&#34;https://theevilbit.github.io/beyond/beyond_intro/&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;introduction&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;This persistence mechanism was described in very detail by &lt;a href=&#34;https://twitter.com/xorrior&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chris Ross&lt;/a&gt; in his &lt;a href=&#34;https://posts.specterops.io/persistent-credential-theft-with-authorization-plugins-d17b34719d65&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;blogpost: Persistent Credential Theft with Authorization Plugins&lt;/a&gt;. He also developed sample code, which can be found on his &lt;a href=&#34;https://github.com/xorrior/macOSTools/tree/master/auth_plugins&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub&lt;/a&gt;. Thus this blog will only focus on the high level summary, and some changes that happened since he wrote that post.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Beyond the good ol&#39; LaunchAgents - 27 - Dock shortcuts</title>
      <link>https://theevilbit.github.io/beyond/beyond_0027/</link>
      <pubDate>Tue, 08 Feb 2022 00:00:00 +0000</pubDate>
      <guid>https://theevilbit.github.io/beyond/beyond_0027/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;This is part 27 in the series of &amp;ldquo;Beyond the good ol&amp;rsquo; LaunchAgents&amp;rdquo;, where I try to collect various persistence techniques for macOS. For more background check the &lt;a href=&#34;https://theevilbit.github.io/beyond/beyond_intro/&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;introduction&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;This persistence is another gem I found in &lt;a href=&#34;https://twitter.com/_D00mfist&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Leo Pitt&lt;/a&gt;&amp;rsquo;s &lt;a href=&#34;https://www.youtube.com/watch?v=OFQYTJiAmxs&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Modern macOS Persistence&lt;/a&gt; talk.&lt;/p&gt;&#xA;&lt;p&gt;macOS Dock stores shortcuts for applications, that we would like to access through the, well&amp;hellip; Dock. It stores all settings in &lt;code&gt;~/Library/Preferences/com.apple.dock.plist&lt;/code&gt;. Although we can edit this PLIST directly, we can also use the &lt;code&gt;defaults&lt;/code&gt; utility to change it. For example adding a new entry:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Beyond the good ol&#39; LaunchAgents - 26 - Finder Sync Plugins</title>
      <link>https://theevilbit.github.io/beyond/beyond_0026/</link>
      <pubDate>Sat, 05 Feb 2022 00:00:00 +0000</pubDate>
      <guid>https://theevilbit.github.io/beyond/beyond_0026/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;This is part 26 in the series of &amp;ldquo;Beyond the good ol&amp;rsquo; LaunchAgents&amp;rdquo;, where I try to collect various persistence techniques for macOS. For more background check the &lt;a href=&#34;https://theevilbit.github.io/beyond/beyond_intro/&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;introduction&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;This method was documented very detailed by Patrick Wardle in his &lt;a href=&#34;https://objective-see.com/blog/blog_0x11.html&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;blogpost&lt;/a&gt; back in 2016. It was also covered by &lt;a href=&#34;https://twitter.com/_D00mfist&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Leo Pitt&lt;/a&gt; in his &lt;a href=&#34;https://www.youtube.com/watch?v=OFQYTJiAmxs&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Modern macOS Persistence&lt;/a&gt; talk, and he also made a POC, which can be found at his &lt;a href=&#34;https://github.com/D00MFist/InSync&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub&lt;/a&gt;. With there is really nothing to add here, so this post will be only a high level summary, for everything else refer to the above resources.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Beyond the good ol&#39; LaunchAgents - 25 - Apache2 modules</title>
      <link>https://theevilbit.github.io/beyond/beyond_0025/</link>
      <pubDate>Wed, 15 Dec 2021 00:00:00 +0000</pubDate>
      <guid>https://theevilbit.github.io/beyond/beyond_0025/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;This is part 25 in the series of &amp;ldquo;Beyond the good ol&amp;rsquo; LaunchAgents&amp;rdquo;, where I try to collect various persistence techniques for macOS. For more background check the &lt;a href=&#34;https://theevilbit.github.io/beyond/beyond_intro/&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;introduction&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;Possibly a less known feature that macOS has a built-in Apache2 web server, which can be enabled anytime. Just as other Apache2 servers, it also supports the load of custom modules, and this is what we will explore here briefly for persistence. For a detailed web server setup, I recommend the following articles:&#xA;&lt;a href=&#34;https://discussions.apple.com/docs/DOC-3083&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Setting up a local web server on a Mac - Apple Community&lt;/a&gt;&#xA;&lt;a href=&#34;https://discussions.apple.com/docs/DOC-250004361&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Setting up a local web server on macOS 12… - Apple Community&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Beyond the good ol&#39; LaunchAgents - 24 - Folder Actions</title>
      <link>https://theevilbit.github.io/beyond/beyond_0024/</link>
      <pubDate>Thu, 02 Dec 2021 00:00:00 +0000</pubDate>
      <guid>https://theevilbit.github.io/beyond/beyond_0024/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;This is part 24 in the series of &amp;ldquo;Beyond the good ol&amp;rsquo; LaunchAgents&amp;rdquo;, where I try to collect various persistence techniques for macOS. For more background check the &lt;a href=&#34;https://theevilbit.github.io/beyond/beyond_intro/&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;introduction&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;Folder action persistence has been documented by &lt;a href=&#34;https://twitter.com/its_a_feature_&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cody Thomas&lt;/a&gt; back in 2019 &lt;a href=&#34;https://posts.specterops.io/folder-actions-for-persistence-on-macos-8923f222343d&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;in his blog&lt;/a&gt;. I think he did an awesome job, and everything he wrote still applies today. I wanted to take it a bit further and see if I can persist without any user prompts, and it turned out it is possible. I will also talk about its TCC implications.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Beyond the good ol&#39; LaunchAgents - 23 - emond, The Event Monitor Daemon</title>
      <link>https://theevilbit.github.io/beyond/beyond_0023/</link>
      <pubDate>Sat, 27 Nov 2021 00:00:00 +0000</pubDate>
      <guid>https://theevilbit.github.io/beyond/beyond_0023/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;This is part 23 in the series of &amp;ldquo;Beyond the good ol&amp;rsquo; LaunchAgents&amp;rdquo;, where I try to collect various persistence techniques for macOS. For more background check the &lt;a href=&#34;https://theevilbit.github.io/beyond/beyond_intro/&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;introduction&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;This post will be about &lt;code&gt;emond&lt;/code&gt;, Apple&amp;rsquo;s Event Monitor daemon.&lt;/p&gt;&#xA;&lt;p&gt;I think almost everything has been already told about this method and &lt;code&gt;emond&lt;/code&gt; in general by James Reynolds &lt;a href=&#34;http://magnusviri.com/what-is-emond.html&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt; and &lt;a href=&#34;https://twitter.com/xorrior&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;xorrior&lt;/a&gt; &lt;a href=&#34;https://www.xorrior.com/emond-persistence/&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt; so really not much left for me. There is no point for me replicating their awesome posts, so please just read them. That&amp;rsquo;s it! Thank you for reading! ¯\&lt;em&gt;(ツ)&lt;/em&gt;/¯&#xA;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Beyond the good ol&#39; LaunchAgents - 22 - LoginHook and LogoutHook</title>
      <link>https://theevilbit.github.io/beyond/beyond_0022/</link>
      <pubDate>Wed, 24 Nov 2021 00:00:00 +0000</pubDate>
      <guid>https://theevilbit.github.io/beyond/beyond_0022/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;This is part 22 in the series of &amp;ldquo;Beyond the good ol&amp;rsquo; LaunchAgents&amp;rdquo;, where I try to collect various persistence techniques for macOS. For more background check the &lt;a href=&#34;https://theevilbit.github.io/beyond/beyond_intro/&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;introduction&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;This method is considered deprecated by Apple, yet it still works.&lt;/p&gt;&#xA;&lt;p&gt;LoginHooks and LogoutHooks have been widely documented by many people, so this post is mostly for completeness. The official, Apple documentation can be found here: &lt;a href=&#34;https://developer.apple.com/library/archive/documentation/MacOSX/Conceptual/BPSystemStartup/Chapters/CustomLogin.html#//apple_ref/doc/uid/10000172i-SW10-SW1&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Customizing Login and Logout&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;LoginHooks and LogoutHooks are executed, well&amp;hellip; at logins and logouts just as the name suggest, and they are run as root. They are set in the preferences of the  &lt;code&gt;com.apple.loginwindow&lt;/code&gt; process, and so it&amp;rsquo;s stored in the file &lt;code&gt;/var/root/Library/Preferences/com.apple.loginwindow.plist&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Beyond the good ol&#39; LaunchAgents - 21 - Re-opened Applications</title>
      <link>https://theevilbit.github.io/beyond/beyond_0021/</link>
      <pubDate>Tue, 12 Oct 2021 00:00:00 +0000</pubDate>
      <guid>https://theevilbit.github.io/beyond/beyond_0021/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;This is part 21 in the series of &amp;ldquo;Beyond the good ol&amp;rsquo; LaunchAgents&amp;rdquo;, where I try to collect various persistence techniques for macOS. For more background check the &lt;a href=&#34;https://theevilbit.github.io/beyond/beyond_intro/&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;introduction&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;This method was also documented by Patrick Wardle, in his original &lt;a href=&#34;https://www.virusbulletin.com/uploads/pdf/conference/vb2014/VB2014-Wardle.pdf&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Methods of Malware Persistence&lt;/a&gt; white paper and also at &lt;a href=&#34;https://attack.mitre.org/techniques/T1547/007/&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MITRE ATT&amp;amp;CK®&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;When we restart macOS, we are presented with the following window:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://theevilbit.github.io/images/beyond/beyond_0021_0.png&#34; alt=&#34;Re-open Applications Prompt&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;I guess, most users keep it selected, and then macOS will reopen all apps.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Beyond the good ol&#39; LaunchAgents - 20 - Terminal Preferences</title>
      <link>https://theevilbit.github.io/beyond/beyond_0020/</link>
      <pubDate>Wed, 22 Sep 2021 00:00:00 +0000</pubDate>
      <guid>https://theevilbit.github.io/beyond/beyond_0020/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;This is part 20 in the series of &amp;ldquo;Beyond the good ol&amp;rsquo; LaunchAgents&amp;rdquo;, where I try to collect various persistence techniques for macOS. For more background check the &lt;a href=&#34;https://theevilbit.github.io/beyond/beyond_intro/&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;introduction&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;This is another application specific persistence method, related to the Terminal application.&lt;/p&gt;&#xA;&lt;p&gt;In the Terminal Preferences, under the Profiles tab, we can set a command that will be executed upon Terminal&amp;rsquo;s startup. This is shown in the screen below.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://theevilbit.github.io/images/beyond/beyond_0020_0.png&#34; alt=&#34;Terminal Profile Settings&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Beyond the good ol&#39; LaunchAgents - 19 - Periodic Scripts</title>
      <link>https://theevilbit.github.io/beyond/beyond_0019/</link>
      <pubDate>Fri, 06 Aug 2021 00:00:00 +0000</pubDate>
      <guid>https://theevilbit.github.io/beyond/beyond_0019/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;This is part 19 in the series of &amp;ldquo;Beyond the good ol&amp;rsquo; LaunchAgents&amp;rdquo;, where I try to collect various persistence techniques for macOS. For more background check the &lt;a href=&#34;https://theevilbit.github.io/beyond/beyond_intro/&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;introduction&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;This post has been long due, as it&amp;rsquo;s one of my favorite persistence tricks. Up until Big Sur 11.5 you could also exploit it for privilege escalation if Homebrew was installed on the system.&lt;/p&gt;&#xA;&lt;p&gt;Periodic scripts have a FreeBSD origin. These scripts are doing some maintenance tasks on the system, and scheduled to be run on a daily, weekly and monthly basis.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Beyond the good ol&#39; LaunchAgents - 18 - X11 and XQuartz</title>
      <link>https://theevilbit.github.io/beyond/beyond_0018/</link>
      <pubDate>Mon, 28 Jun 2021 00:00:00 +0000</pubDate>
      <guid>https://theevilbit.github.io/beyond/beyond_0018/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;This is part 18 in the series of &amp;ldquo;Beyond the good ol&amp;rsquo; LaunchAgents&amp;rdquo;, where I try to collect various persistence techniques for macOS. For more background check the &lt;a href=&#34;https://theevilbit.github.io/beyond/beyond_intro/&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;introduction&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;I learned about &lt;a href=&#34;https://www.xquartz.org/&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;XQuartz&lt;/a&gt; while reading Armin Briegel&amp;rsquo;s &lt;a href=&#34;https://books.apple.com/hu/book/macos-terminal-and-shell/id1550617226&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;‎macOS Terminal and shell&lt;/a&gt; book. It&amp;rsquo;s one of the alternative third party terminals we can install on macOS. As most terminals, this one also offers unique options to persist on the system.&lt;/p&gt;&#xA;&lt;p&gt;X11 used to be part of OS X, till 10.7, and it was open source, which we can find &lt;a href=&#34;https://opensource.apple.com/source/X11server/X11server-106.7/&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Beyond the good ol&#39; LaunchAgents - 17 - Color Pickers</title>
      <link>https://theevilbit.github.io/beyond/beyond_0017/</link>
      <pubDate>Mon, 31 May 2021 00:00:00 +0000</pubDate>
      <guid>https://theevilbit.github.io/beyond/beyond_0017/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;This is part 17 in the series of &amp;ldquo;Beyond the good ol&amp;rsquo; LaunchAgents&amp;rdquo;, where I try to collect various persistence techniques for macOS. For more background check the &lt;a href=&#34;https://theevilbit.github.io/beyond/beyond_intro/&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;introduction&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;Color pickers??? It&amp;rsquo;s this menu, where we can select a color:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://theevilbit.github.io/images/beyond/beyond_0017_0.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;To my surprise we can install our own color pickers on the system, and add custom ones. There are quite a few of these, some are even open source, like this: &lt;a href=&#34;https://github.com/viktorstrate/color-picker-plus&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub - viktorstrate/color-picker-plus: An Improved Color Picker for macOS&lt;/a&gt;. Github is full of color picker codes, mostly written in Swift. We don&amp;rsquo;t really need those, unless we want to be stealthy and hide our code inside a legitimate picker.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Beyond the good ol&#39; LaunchAgents - 16 - Screen Saver</title>
      <link>https://theevilbit.github.io/beyond/beyond_0016/</link>
      <pubDate>Sun, 30 May 2021 00:00:00 +0000</pubDate>
      <guid>https://theevilbit.github.io/beyond/beyond_0016/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;This is part 16 in the series of &amp;ldquo;Beyond the good ol&amp;rsquo; LaunchAgents&amp;rdquo;, where I try to collect various persistence techniques for macOS. For more background check the &lt;a href=&#34;https://theevilbit.github.io/beyond/beyond_intro/&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;introduction&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;Screen savers have been detailed recently by &lt;a href=&#34;https://twitter.com/_D00mfist&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Leo Pitt&lt;/a&gt;on his &lt;a href=&#34;https://posts.specterops.io/saving-your-access-d562bf5bf90b&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;blog post: &amp;ldquo;Saving Your Access&amp;rdquo;&lt;/a&gt;. Considering that he already wrote most of the interesting stuff, I will try to show some new information, but there will be some overlap.&lt;/p&gt;&#xA;&lt;p&gt;Screen savers are macOS bundles with the bundle extension of &lt;code&gt;.saver&lt;/code&gt;. Their &lt;code&gt;Info.plist&lt;/code&gt; file doesn&amp;rsquo;t contain anything screen saver specific, so we can really use any bundle with the right extension.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Beyond the good ol&#39; LaunchAgents - 15 - xsanctl</title>
      <link>https://theevilbit.github.io/beyond/beyond_0015/</link>
      <pubDate>Wed, 12 May 2021 00:00:00 +0000</pubDate>
      <guid>https://theevilbit.github.io/beyond/beyond_0015/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;This is part 15 in the series of &amp;ldquo;Beyond the good ol&amp;rsquo; LaunchAgents&amp;rdquo;, where I try to collect various persistence techniques for macOS. For more background check the &lt;a href=&#34;https://theevilbit.github.io/beyond/beyond_intro/&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;introduction&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;I run into this not so exciting persistent method when I was investigating &lt;code&gt;xsanctl&lt;/code&gt; for&amp;hellip; other&amp;hellip; reasons&amp;hellip; &lt;code&gt;xsanctl&lt;/code&gt; is a &amp;ldquo;Xsan file system control utility&amp;rdquo;, which allows us to mount and manage Xsans.&lt;/p&gt;&#xA;&lt;p&gt;The &lt;code&gt;xsanctl&lt;/code&gt; binary can be found at &lt;code&gt;/System/Library/Filesystems/acfs.fs/Contents/bin/xsanctl&lt;/code&gt;, however when we simply run the command it is run from &lt;code&gt;/usr/sbin/xsanctl&lt;/code&gt;. If we check, this is a symbolic link.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Beyond the good ol&#39; LaunchAgents - 14 - atrun</title>
      <link>https://theevilbit.github.io/beyond/beyond_0014/</link>
      <pubDate>Tue, 27 Apr 2021 00:00:00 +0000</pubDate>
      <guid>https://theevilbit.github.io/beyond/beyond_0014/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;This is part 14 in the series of &amp;ldquo;Beyond the good ol&amp;rsquo; LaunchAgents&amp;rdquo;, where I try to collect various persistence techniques for macOS. For more background check the &lt;a href=&#34;https://theevilbit.github.io/beyond/beyond_intro/&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;introduction&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;The &lt;code&gt;at&lt;/code&gt; command set is a heritage *nix job scheduler on macOS. Although it&amp;rsquo;s slowly being deprecated, it&amp;rsquo;s still available on Big Sur, although disabled by default.&lt;/p&gt;&#xA;&lt;h2 id=&#34;enabling-atrun&#34;&gt;&#xA;  Enabling atrun&#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#enabling-atrun&#34;&gt;&#xA;    &lt;i class=&#34;fa-solid fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;As described by &lt;code&gt;atrun&lt;/code&gt;&amp;rsquo;s man page, the scheduler can be enabled using the following command:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Beyond the good ol&#39; LaunchAgents - 13 - Audio Plugins</title>
      <link>https://theevilbit.github.io/beyond/beyond_0013/</link>
      <pubDate>Mon, 19 Apr 2021 00:00:00 +0000</pubDate>
      <guid>https://theevilbit.github.io/beyond/beyond_0013/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;This is part 13 in the series of &amp;ldquo;Beyond the good ol&amp;rsquo; LaunchAgents&amp;rdquo;, where I try to collect various persistence techniques for macOS. For more background check the &lt;a href=&#34;https://theevilbit.github.io/beyond/beyond_intro/&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;introduction&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;This is another one of my favorites for some reason. macOS being a popular audio editing device, supports external audio drivers and plugins. &lt;a href=&#34;https://twitter.com/xorrior&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;@xorrior&lt;/a&gt; wrote a very extensive blog post about these at his website, here: &lt;a href=&#34;https://posts.specterops.io/audio-unit-plug-ins-896d3434a882&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Audio Unit Plug-ins. Legitimate Un-signed Code Execution | by Christopher Ross | Posts By SpecterOps Team Members&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Beyond the good ol&#39; LaunchAgents - 12 - QuickLook Plugins</title>
      <link>https://theevilbit.github.io/beyond/beyond_0012/</link>
      <pubDate>Mon, 05 Apr 2021 00:00:00 +0000</pubDate>
      <guid>https://theevilbit.github.io/beyond/beyond_0012/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;This is part 12 in the series of &amp;ldquo;Beyond the good ol&amp;rsquo; LaunchAgents&amp;rdquo;, where I try to collect various persistence techniques for macOS. For more background check the &lt;a href=&#34;https://theevilbit.github.io/beyond/beyond_intro/&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;introduction&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;tldr&#34;&gt;&#xA;  TL;DR&#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#tldr&#34;&gt;&#xA;    &lt;i class=&#34;fa-solid fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;This technique is very similarly to Spotlight Importers, but heavily sandboxed. It’s even more limited as the user need to specifically want to preview the file.&lt;/p&gt;&#xA;&lt;h2 id=&#34;intro&#34;&gt;&#xA;  Intro&#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#intro&#34;&gt;&#xA;    &lt;i class=&#34;fa-solid fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;This will be a short post and it goes hand in hand with my &lt;a href=&#34;https://theevilbit.github.io/beyond/beyond_0011/&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;previous one&lt;/a&gt; that detailed the use of Spotlight Importers for persistence. Jonathan’s book also details QuickLook plugins and &lt;a href=&#34;https://twitter.com/osxreverser&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;fG! (@osxreverser) on Twitter&lt;/a&gt; also said that he used to play with this, so I decided to take a look as well.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Beyond the good ol&#39; LaunchAgents - 11 - Spotlight Importers</title>
      <link>https://theevilbit.github.io/beyond/beyond_0011/</link>
      <pubDate>Sat, 03 Apr 2021 00:00:00 +0000</pubDate>
      <guid>https://theevilbit.github.io/beyond/beyond_0011/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;This is part 11 in the series of &amp;ldquo;Beyond the good ol&amp;rsquo; LaunchAgents&amp;rdquo;, where I try to collect various persistence techniques for macOS. For more background check the &lt;a href=&#34;https://theevilbit.github.io/beyond/beyond_intro/&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;introduction&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;tldr&#34;&gt;&#xA;  TL;DR&#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#tldr&#34;&gt;&#xA;    &lt;i class=&#34;fa-solid fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;It works, but very limited due to heavy sandboxing, you can only read and copy files to your sandbox folder or consume some CPU power. If you have a way to escape sandbox then go for it, or could be used as part of a multi-part malware.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Beyond the good ol&#39; LaunchAgents - 10 - Application script files</title>
      <link>https://theevilbit.github.io/beyond/beyond_0010/</link>
      <pubDate>Fri, 02 Apr 2021 00:00:00 +0000</pubDate>
      <guid>https://theevilbit.github.io/beyond/beyond_0010/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;This is part 10 in the series of &amp;ldquo;Beyond the good ol&amp;rsquo; LaunchAgents&amp;rdquo;, where I try to collect various persistence techniques for macOS. For more background check the &lt;a href=&#34;https://theevilbit.github.io/beyond/beyond_intro/&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;introduction&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;I started to explore to possibility of persisting on macOS through script files contained in an application. The basic idea is that if we find a script file, which is being executed by a given application, we can edit that script file, put our code inside, and wait for an execution. Such technique is highly dependent on the applications the user has installed, so I looked through first how rare / frequent is having such scripts inside applications. I started with the below searches:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Beyond the good ol&#39; LaunchAgents - 9 - Preference Pane</title>
      <link>https://theevilbit.github.io/beyond/beyond_0009/</link>
      <pubDate>Thu, 25 Mar 2021 00:00:00 +0000</pubDate>
      <guid>https://theevilbit.github.io/beyond/beyond_0009/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;This is part 9 in the series of &amp;ldquo;Beyond the good ol&amp;rsquo; LaunchAgents&amp;rdquo;, where I try to collect various persistence techniques for macOS. For more background check the &lt;a href=&#34;https://theevilbit.github.io/beyond/beyond_intro/&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;introduction&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;Preference panes on macOS are plugins to the &lt;code&gt;System Preferences.app&lt;/code&gt;. These panes can extend the functionality of the app, and typically allow you to modify configuration settings for your app. These admins are loaded when the user selects them, so they are not perfect from persistence point of view, as it requires user interaction, but can still be a thing.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Beyond the good ol&#39; LaunchAgents - 8 - Hammerspoon</title>
      <link>https://theevilbit.github.io/beyond/beyond_0008/</link>
      <pubDate>Tue, 23 Mar 2021 00:00:00 +0000</pubDate>
      <guid>https://theevilbit.github.io/beyond/beyond_0008/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;This is part 8 in the series of &amp;ldquo;Beyond the good ol&amp;rsquo; LaunchAgents&amp;rdquo;, where I try to collect various persistence techniques for macOS. For more background check the &lt;a href=&#34;https://theevilbit.github.io/beyond/beyond_intro/&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;introduction&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;This idea came from my colleague &lt;a href=&#34;https://twitter.com/dejandayoff&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;@dejandayoff&lt;/a&gt;. It&amp;rsquo;s another application specific persistence option, related to &lt;a href=&#34;https://www.hammerspoon.org/&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hammerspoon&lt;/a&gt;. The app is an automation tool, that allows macOS scripting through LUA scripting language. We can even embed full AppleScript code as well as run shell scripts.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Beyond the good ol&#39; LaunchAgents - 7 - xbar plugins</title>
      <link>https://theevilbit.github.io/beyond/beyond_0007/</link>
      <pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate>
      <guid>https://theevilbit.github.io/beyond/beyond_0007/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;This is part 7 in the series of &amp;ldquo;Beyond the good ol&amp;rsquo; LaunchAgents&amp;rdquo;, where I try to collect various persistence techniques for macOS. For more background check the &lt;a href=&#34;https://theevilbit.github.io/beyond/beyond_intro/&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;introduction&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;This technique came from &lt;a href=&#34;https://twitter.com/bradleyjkemp&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;@bradleyjkemp&lt;/a&gt; in one of his Twitter &lt;a href=&#34;https://twitter.com/bradleyjkemp/status/13743463128759787550&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;posts&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/matryer/xbar&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;xbar&lt;/a&gt; is an application that can put the output of a script into the menubar. The scripts should be placed in &lt;code&gt;~/Library/Application\ Support/xbar/plugins/&lt;/code&gt;. Standard shell scripts are supported, and so I tried the one listed on their GitHub page as an example.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Beyond the good ol&#39; LaunchAgents - 6 - SSHRC</title>
      <link>https://theevilbit.github.io/beyond/beyond_0006/</link>
      <pubDate>Sun, 21 Mar 2021 00:00:00 +0000</pubDate>
      <guid>https://theevilbit.github.io/beyond/beyond_0006/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;This is part 6 in the series of &amp;ldquo;Beyond the good ol&amp;rsquo; LaunchAgents&amp;rdquo;, where I try to collect various persistence techniques for macOS. For more background check the &lt;a href=&#34;https://theevilbit.github.io/beyond/beyond_intro/&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;introduction&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;I learned about this trick from &lt;a href=&#34;https://twitter.com/0xdade&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;@0xdade&lt;/a&gt; when he &lt;a href=&#34;https://twitter.com/0xdade/status/1373145566943711235&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;posted&lt;/a&gt; it on Twitter.&lt;/p&gt;&#xA;&lt;p&gt;If we create a file in the user&amp;rsquo;s HOME directory at &lt;code&gt;~/.ssh/rc&lt;/code&gt; it will be executed prior to the user&amp;rsquo;s login shell becomes available. The man page of &lt;code&gt;sshd&lt;/code&gt; describes this in more detail.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Beyond the good ol&#39; LaunchAgents - 5 - Pluggable Authentication Modules (PAM)</title>
      <link>https://theevilbit.github.io/beyond/beyond_0005/</link>
      <pubDate>Sat, 20 Mar 2021 00:00:00 +0000</pubDate>
      <guid>https://theevilbit.github.io/beyond/beyond_0005/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;This is part 5 in the series of &amp;ldquo;Beyond the good ol&amp;rsquo; LaunchAgents&amp;rdquo;, where I try to collect various persistence techniques for macOS. For more background check the &lt;a href=&#34;https://theevilbit.github.io/beyond/beyond_intro/&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;introduction&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Pluggable_authentication_module&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PAM&lt;/a&gt; originated from Red Hat Linux, but made its way to most *nix based system, including macOS. It&amp;rsquo;s a modular system, that allows third party additions to various authentication related operations. I highly recommend checking out the &lt;a href=&#34;https://docs.freebsd.org/en/articles/pam/&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;FreeBSD documentation&lt;/a&gt; to get a full picture.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Beyond the good ol&#39; LaunchAgents - 4 - cron jobs</title>
      <link>https://theevilbit.github.io/beyond/beyond_0004/</link>
      <pubDate>Thu, 18 Mar 2021 00:00:00 +0000</pubDate>
      <guid>https://theevilbit.github.io/beyond/beyond_0004/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;This is part 4 in the series of &amp;ldquo;Beyond the good ol&amp;rsquo; LaunchAgents&amp;rdquo;, where I try to collect various persistence techniques for macOS. For more background check the &lt;a href=&#34;https://theevilbit.github.io/beyond/beyond_intro/&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;introduction&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Cron&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;cron&lt;/a&gt; is probably one of the most well known persistence mechanisms for macOS and basically any *nix operating system. It was originally developed for Unix back in 1975, and made its way to most platforms, which has Unix origins, like Linux, FreeBSD and thus macOS.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Beyond the good ol&#39; LaunchAgents - 3 - Login Items</title>
      <link>https://theevilbit.github.io/beyond/beyond_0003/</link>
      <pubDate>Wed, 17 Mar 2021 00:00:00 +0000</pubDate>
      <guid>https://theevilbit.github.io/beyond/beyond_0003/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;This is part 3 in the series of &amp;ldquo;Beyond the good ol&amp;rsquo; LaunchAgents&amp;rdquo;, where I try to collect various persistence techniques for macOS. For more background check the &lt;a href=&#34;https://theevilbit.github.io/beyond/beyond_intro/&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;introduction&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;To clear up some expectations. The below tweet is not about this method, that is deferred for now. :)&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://theevilbit.github.io/images/beyond/beyond_0003_0.png&#34; alt=&#34;Twitter&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Login items are probably one of the most well documented methods to persist on macOS. It&amp;rsquo;s widely used by various application to launch themselves upon user login. These applications show up in the menubar most of the time.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Beyond the good ol&#39; LaunchAgents - 2 - iTerm2 startup</title>
      <link>https://theevilbit.github.io/beyond/beyond_0002/</link>
      <pubDate>Tue, 16 Mar 2021 00:00:00 +0000</pubDate>
      <guid>https://theevilbit.github.io/beyond/beyond_0002/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;This is part 2 in the series of &amp;ldquo;Beyond the good ol&amp;rsquo; LaunchAgents&amp;rdquo;, where I try to collect various persistence techniques for macOS. For more background check the &lt;a href=&#34;https://theevilbit.github.io/beyond/beyond_intro/&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;introduction&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;If the first part was about &lt;code&gt;Terminal&lt;/code&gt; and shell profiles, it&amp;rsquo;s worth to mention &lt;a href=&#34;https://iterm2.com/&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;iTerm2&lt;/a&gt;, which is a popular Terminal alternative on macOS. It&amp;rsquo;s being used by many people, especially power users.&lt;/p&gt;&#xA;&lt;p&gt;When we start &lt;code&gt;iTerm2&lt;/code&gt; it starts the same shell environment as &lt;code&gt;Terminal&lt;/code&gt;,  and thus the same startup files apply here as well. However this application has an additional way to execute code.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Beyond the good ol&#39; LaunchAgents - 1 - shell startup files</title>
      <link>https://theevilbit.github.io/beyond/beyond_0001/</link>
      <pubDate>Sun, 14 Mar 2021 00:00:00 +0000</pubDate>
      <guid>https://theevilbit.github.io/beyond/beyond_0001/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;This is part 1 in the series of &amp;ldquo;Beyond the good ol&amp;rsquo; LaunchAgents&amp;rdquo;, where I try to collect various persistence techniques for macOS. For more background check the &lt;a href=&#34;https://theevilbit.github.io/beyond/beyond_intro/&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;introduction&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;Shell startup files are executed when our shell environment like &lt;code&gt;zsh&lt;/code&gt; or &lt;code&gt;bash&lt;/code&gt; is starting up. macOS defaults to &lt;code&gt;/bin/zsh&lt;/code&gt;  these days, and whenever we open &lt;code&gt;Terminal&lt;/code&gt; or SSH into the device, this is the shell environment we are placed into. &lt;code&gt;bash&lt;/code&gt; and &lt;code&gt;sh&lt;/code&gt; are still available, however they have to be specifically started.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Beyond the good ol&#39; LaunchAgents - Introduction</title>
      <link>https://theevilbit.github.io/beyond/beyond_intro/</link>
      <pubDate>Sun, 14 Mar 2021 00:00:00 +0000</pubDate>
      <guid>https://theevilbit.github.io/beyond/beyond_intro/</guid>
      <description>&lt;p&gt;I was always amazed by &lt;a href=&#34;https://twitter.com/Hexacorn&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;@Hexacorn&lt;/a&gt;&amp;rsquo;s &lt;a href=&#34;https://www.hexacorn.com/blog/category/autostart-persistence/&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Beyond good ol&amp;rsquo; Run key&lt;/a&gt; blog post series, which collects various &lt;a href=&#34;https://attack.mitre.org/tactics/TA0003/&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;persistence&lt;/a&gt; methods on Windows. It&amp;rsquo;s an awesome series, which has 133 parts at the time of this writing. I find them pretty cool, and if you are doing either offensive or defensive work on Windows, this is  a must read and follow blog.&lt;/p&gt;&#xA;&lt;p&gt;In the past years as my interest in macOS grew, and now that I&amp;rsquo;m mostly doing only macOS related research and studies I started to came across many - many tricks, which allows someone to do persistence on macOS beyond just the &lt;code&gt;LaunchDaemons&lt;/code&gt; or &lt;code&gt;LaunchAgents&lt;/code&gt; directories, which is used to store the &lt;code&gt;launchd&lt;/code&gt; startup files. This location is probably as classic on macOS as the &lt;code&gt;Run&lt;/code&gt; registry key on Windows. I did write about two different techniques in my regular posts (&lt;a href=&#34;https://theevilbit.github.io/posts/macos_persistence_spotlight_importers/&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt; and &lt;a href=&#34;https://theevilbit.github.io/posts/macos_persisting_through-application_script_files/&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;), but it never became a full series. So I started to think about writing posts for each idea I came across, just like Adam does for Windows, but I would do for macOS. With almost the same name, just swapping &lt;code&gt;Run key&lt;/code&gt; with &lt;code&gt;LaunchAgents&lt;/code&gt; and name it &lt;code&gt;Beyond the good ol&#39; LaunchAgents&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
