<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Shield on theevilbit blog</title>
    <link>https://theevilbit.github.io/categories/shield/</link>
    <description>Recent content in Shield on theevilbit blog</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Sun, 22 Sep 2019 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://theevilbit.github.io/categories/shield/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Shield - An app to protect against process injection on macOS</title>
      <link>https://theevilbit.github.io/shield/</link>
      <pubDate>Sun, 22 Sep 2019 00:00:00 +0000</pubDate>
      <guid>https://theevilbit.github.io/shield/</guid>
      <description>&lt;h1 id=&#34;shield---an-app-to-protect-against-process-injection-on-macos&#34;&gt;&#xA;  Shield - An app to protect against process injection on macOS&#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#shield---an-app-to-protect-against-process-injection-on-macos&#34;&gt;&#xA;    &lt;i class=&#34;fa-solid fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;In this post I would like to tell the story of the Shield.app development and also introduce its features. It&amp;rsquo;s been a ride over the past year, and I wasn&amp;rsquo;t sure always that it will happen.&lt;/p&gt;&#xA;&lt;h2 id=&#34;motivation-for-limiting-process-injections&#34;&gt;&#xA;  Motivation for limiting process injections&#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#motivation-for-limiting-process-injections&#34;&gt;&#xA;    &lt;i class=&#34;fa-solid fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;In the past 2 years I started to dig into macOS security research, and along the way it became pretty clear that beyond memory corruption issues the alpha and omega of macOS exploits is to run code in the context of other applications. The reason for this lies within the security model of macOS (and in fact *OS as well). Each application has a list of entitlements that grants the application various rights. If we take only 3rd party applications it&amp;rsquo;s mostly around what it can do if it&amp;rsquo;s sandboxed (e.g.: access the network) or if not sandboxed, which privacy (TCC) protected areas can it access, like camera, microphone, messages, etc&amp;hellip; In case of TCC, if we don&amp;rsquo;t hold these entitlements, we can&amp;rsquo;t access those resources or location even if we run as root.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
