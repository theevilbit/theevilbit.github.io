<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kernel on theevilbit blog</title>
    <link>https://theevilbit.github.io/tags/kernel/</link>
    <description>Recent content in Kernel on theevilbit blog</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Tue, 12 May 2020 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://theevilbit.github.io/tags/kernel/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Kernel Debugging macOS with SIP</title>
      <link>https://theevilbit.github.io/posts/kernel_debugging_with_sip/</link>
      <pubDate>Tue, 12 May 2020 00:00:00 +0000</pubDate>
      <guid>https://theevilbit.github.io/posts/kernel_debugging_with_sip/</guid>
      <description>&lt;p&gt;As security researchers, we often find ourselves needing to look deep into various kernels to fully understand our target and accomplish our goals. Doing so on the Windows platform is no mystery, as there have been countless well-written posts about kernel debugging setups. For macOS, however, the situation is slightly different.&lt;/p&gt;&#xA;&lt;p&gt;There are many great posts describing how to set up kernel debugging between two machines, but all of them suggest that SIP (System Integrity Protection) should be disabled for kernel debugging. This creates a problem if we want to investigate the inner workings of macOSâ€™s security mechanisms, since turning off SIP will also turn off most of the foundational security features of the operating system.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
